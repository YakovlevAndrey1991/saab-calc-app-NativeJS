{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,yBAAyB,aAAa,WAAW,WAAW;AAC5D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBuC;AACvC,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;ACPwB;AACvC,uBAAuB,mDAAW;AAClC;AACA;AACA;AACA;AACA;AACA,iEAAe,UAAU;;;;;;;;;;;;;;;ACPc;AACvC,0BAA0B,mDAAW;AACrC;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;ACPwB;AACvC,sBAAsB,mDAAW;AACjC;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;ACPA;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA,6CAA6C,cAAc;AAC3D,8CAA8C,mBAAmB,IAAI,wBAAwB;AAC7F,qCAAqC,YAAY,IAAI,iBAAiB;AACtE,qCAAqC,YAAY,IAAI,iBAAiB;AACtE,qCAAqC,YAAY,IAAI,iBAAiB;AACtE,qCAAqC,YAAY,IAAI,iBAAiB;AACtE,qCAAqC,YAAY,IAAI,iBAAiB;AACtE,qCAAqC,YAAY,IAAI,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzCyC;AACzC,wBAAwB,oDAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW;;;;;;;;;;;;;;;ACjBe;AACzC,2BAA2B,oDAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;ACjB0B;AACzC,sBAAsB,oDAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,UAAU;;;;;;;;;;;;;;ACnBV;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBoC;AACpC,sBAAsB,kDAAS;AAC/B;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;ACNqB;AACpC,yBAAyB,kDAAS;AAClC;AACA;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;;ACPqB;AACpC,qBAAqB,kDAAS;AAC9B;AACA;AACA;AACA;AACA,iEAAe;;;;;;;;;;;;;;ACNA;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNuD;AACG;AACG;AACR;AACG;AACG;AACE;AACG;AACY;AACT;AACnE;AACuE;AACvkFAAiB;AACjB,kFAAiB;AACjB,kFAAiB;AACjB,kFAAiB;AACjB,kFAAiB;AACjB,kFAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ","sources":["webpack://practice/./classes/inputClass/inputClass.js","webpack://practice/./classes/inputClass/inputHeightPressure.js","webpack://practice/./classes/inputClass/inputLevel.js","webpack://practice/./classes/inputClass/inputPressure.js","webpack://practice/./classes/inputClass/inputTemp.js","webpack://practice/./classes/selectClass/selectClass.js","webpack://practice/./classes/selectClass/selectLevel.js","webpack://practice/./classes/selectClass/selectPressure.js","webpack://practice/./classes/selectClass/selectTemp.js","webpack://practice/./classes/spanClass/SpanClass.js","webpack://practice/./classes/spanClass/spanLevel.js","webpack://practice/./classes/spanClass/spanPressure.js","webpack://practice/./classes/spanClass/spanTemp.js","webpack://practice/./modules/animation/showHideAnimation.js","webpack://practice/webpack/bootstrap","webpack://practice/webpack/runtime/define property getters","webpack://practice/webpack/runtime/hasOwnProperty shorthand","webpack://practice/webpack/runtime/make namespace object","webpack://practice/./src/index.js"],"sourcesContent":["export default class InputWindow {\r\n    constructor(title, inputID, value, parentSelector) {\r\n        this.title = title\r\n        this.inputID = inputID\r\n        this.value = value\r\n        this.parent = document.querySelector(parentSelector)\r\n\r\n    }\r\n\r\n    render() {\r\n        const element = document.createElement('div')\r\n\r\n        element.innerHTML = `\r\n         <div class=\"container show\">\r\n            <p>${this.title}</p>\r\n            <input id=\"${this.inputID}\" value=\"${this.value}\" type=\"number\" placeholder=\"Введите значение\" class=\"input\">\r\n        </div>\r\n        `\r\n        this.parent.after(element)\r\n    }\r\n}","import InputWindow from \"./inputClass\";\r\nconst inputHeightPressure = new InputWindow(\r\n    \"Высота установки датчика давления\",\r\n    \"heightPressureTransmitter\",\r\n\"500\",\r\n    \".wrapper__auto__dens .title\"\r\n).render()\r\nexport default inputHeightPressure","import InputWindow from \"./inputClass\";\r\nconst inputLevel = new InputWindow(\r\n    \"Введите значение уровня\",\r\n    \"currentLevel\",\r\n    \"\",\r\n    \".level .title\"\r\n).render()\r\nexport default inputLevel;","import InputWindow from \"./inputClass\";\r\nconst inputPressure = new InputWindow(\r\n    \"Давление в Па\",\r\n    \"currentPressure\",\r\n    \"\",\r\n    \".wrapper__auto__dens .title\"\r\n).render()\r\nexport default inputPressure","import InputWindow from \"./inputClass\";\r\nconst inputTemp = new InputWindow(\r\n    \"Значение температуры в грудасах Цельсия\",\r\n    \"currentTemp\",\r\n    \"\",\r\n    \".temperature .title\"\r\n).render()\r\nexport default inputTemp","export default class SelectWindow {\r\n    constructor(title, selectID, selectedValue, selectedValueTitle, parentSelector, value1, value2,value3, titleValue1, titleValue2, titleValue3, titleValue4, titleValue5,titleValue6) {\r\n        this.title = title\r\n        this.selectID = selectID\r\n        this.parent = document.querySelector(parentSelector)\r\n        this.selectedValue = selectedValue\r\n        this.selectedValueTitle = selectedValueTitle\r\n        this.value1 = value1\r\n        this.value2 = value2\r\n        this.value3 = value3\r\n        this.titleValue1 = titleValue1\r\n        this.titleValue2 = titleValue2\r\n        this.titleValue3 = titleValue3\r\n        this.titleValue4 = titleValue4\r\n        this.titleValue5 = titleValue5\r\n        this.titleValue6 = titleValue6\r\n    }\r\n\r\n    render() {\r\n        const element = document.createElement('div');\r\n\r\n        element.innerHTML = `\r\n               <div class=\"container show\">\r\n            <div class=\"content\">\r\n                <p>${this.title}</p>\r\n            </div>\r\n            <div class=\"content\">\r\n                <select class=\"select\" id=\"${this.selectID}\">\r\n                    <option selected value=\"${this.selectedValue}\">${this.selectedValueTitle}</option>\r\n                    <option value=\"${this.value1}\">${this.titleValue1}</option>\r\n                    <option value=\"${this.value2}\">${this.titleValue2}</option>\r\n                    <option value=\"${this.value3}\">${this.titleValue3}</option>\r\n                    <option value=\"${this.value3}\">${this.titleValue4}</option>\r\n                    <option value=\"${this.value3}\">${this.titleValue5}</option>\r\n                    <option value=\"${this.value3}\">${this.titleValue6}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n       `\r\n        this.parent.after(element)\r\n    }\r\n}","import SelectWindow from \"./selectClass\";\r\nconst selectLevel = new SelectWindow(\r\n    \"Выберите уровнемер\",\r\n    \"selectLevel\",\r\n    \"Выберите уровнемер\",\r\n    \"Выберите уровнемер\",\r\n    \".level .title\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"5900S\",\r\n    \"5900C\",\r\n    \"REX\",\r\n    \"PRO\",\r\n    \"5300\",\r\n    \"5400\",\r\n).render()\r\nexport default selectLevel;","import SelectWindow from \"./selectClass\";\r\nconst selectPressure = new SelectWindow(\r\n    \"Выберите датчик\",\r\n    \"selectPressure\",\r\n    \"0\",\r\n    \"Выберите датчик\",\r\n    \".wrapper__auto__dens .title\",\r\n    \"UFF\",\r\n    \"U\",\r\n    \"C\",\r\n    \"3051S Ultra for flow\",\r\n    \"3051S Ultra\",\r\n    \"3051S Classic\",\r\n    \"2051T\",\r\n    \"3051\",\r\n    \"3051SAL\"\r\n).render()\r\nexport default selectPressure","import SelectWindow from \"./selectClass\";\r\nconst selectTemp= new SelectWindow(\r\n    \"Выберите датчик\",\r\n    \"selectTemp\",\r\n    \"Выберите датчик\",\r\n    \"Выберите датчик\",\r\n    '.temperature .title',\r\n    \"0.5\",\r\n    \"0.25\",\r\n    \"0.15\",\r\n    \"2240S\",\r\n    \"NLI/WLS\",\r\n    \"Rosemount 565\",\r\n    \"Rosemount 644\",\r\n    \"Rosemount 765\",\r\n    \"Rosemount 766\"\r\n\r\n\r\n).render()\r\nexport default selectTemp;","export default class SpanClass {\r\n    constructor(title, divClass, parentSelector) {\r\n        this.title = title\r\n        this.divClass = divClass\r\n        this.parent = document.querySelector(parentSelector)\r\n    }\r\n\r\n    render() {\r\n        const element = document.createElement('div')\r\n\r\n        element.innerHTML = `\r\n        <div class=\"container show\">\r\n            <p>${this.title}</p>\r\n            <div class=${this.divClass}>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        `\r\n        this.parent.after(element)\r\n    }\r\n}","import SpanClass from \"./SpanClass\";\r\nconst spanLevel = new SpanClass(\r\n    \"&#948 уровня, %\",\r\n    \"span__result__level\",\r\n    \".level .title\"\r\n).render()\r\nexport default spanLevel","import SpanClass from \"./SpanClass\";\r\nconst spanPressure = new SpanClass(\r\n    \"&#948 давления, %\",\r\n    \"span\",\r\n    \".wrapper__auto__dens .title\",\r\n\r\n).render()\r\nexport default spanPressure","import SpanClass from \"./SpanClass\";\r\nconst spanTemp = new SpanClass(\r\n    \"&#948 температуры, %\",\r\n    \"span\",\r\n    \".temperature .title\"\r\n).render()\r\nexport default spanTemp","export default function showHideAnimation(parentElementSelector, contentSelector, parentElementClassName) {\r\n    const element = document.querySelector(parentElementSelector)\r\n    const content = document.querySelectorAll(contentSelector)\r\n\r\n    element.addEventListener('click', (e) => {\r\n\r\n        const target = e.target\r\n        if (target.classList.contains(parentElementClassName) || target.classList.contains('title') || target.parentElement.classList.contains('title') || target.parentElement.classList.contains(parentElementClassName)) {\r\n            content.forEach(elem => {\r\n                if (elem.classList.contains('hide')){\r\n                    elem.classList.remove('hide')\r\n                    elem.classList.add('show')\r\n                    elem.style.cssText = 'height: 150px'\r\n                } else {\r\n                    elem.classList.remove('show')\r\n                    elem.classList.add('hide')\r\n                    elem.style.cssText = 'height: 50px'\r\n                }\r\n\r\n            })\r\n        }})\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import spanLevel from \"../classes/spanClass/spanLevel\";\r\nimport inputLevel from \"../classes/inputClass/inputLevel\";\r\nimport selectLevel from \"../classes/selectClass/selectLevel\";\r\nimport spanTemp from \"../classes/spanClass/spanTemp\";\r\nimport inputTemp from \"../classes/inputClass/inputTemp\";\r\nimport selectTemp from \"../classes/selectClass/selectTemp\";\r\nimport spanPressure from \"../classes/spanClass/spanPressure\";\r\nimport inputPressure from \"../classes/inputClass/inputPressure\";\r\nimport inputHeightPressure from \"../classes/inputClass/inputHeightPressure\";\r\nimport selectPressure from \"../classes/selectClass/selectPressure\";\r\n\r\nimport showHideAnimation from \"../modules/animation/showHideAnimation\";\r\n\r\nconst resultLevel = document.querySelector('.level span')\r\nconst resultTemp = document.querySelector('.temperature span')\r\nconst resultPressure = document.querySelector('.wrapper__auto__dens span')\r\nconst resultAutoDensityCalc = document.querySelector('.resultAutoDensity span')\r\nconst resultDensityAcc = document.querySelector('.densityAcc span')\r\nconst resultAutoAbsDensityAccCalc = document.querySelector('.absDensityAcc span')\r\nconst resultVolumeAcc = document.querySelector('.volume span')\r\nconst resultWeight = document.querySelector('.currentWeight span')\r\nconst resultWeightAcc = document.querySelector('.weightAcc span')\r\n\r\nlet level, levelTransmitter,\r\n    temp, tempTransmitter,\r\n    pressureTransmitter, pressure, height, tempCorrection,\r\n    density, densityAcc,\r\n    volume, tableAcc,\r\n    weight, weightAcc\r\n\r\n\r\nlet total1, total2, h, p\r\n\r\n\r\nfunction levelCalc() {\r\n\r\n    if (levelTransmitter === 'Выберите уровнемер') {\r\n        resultLevel.textContent = 'Уровнемер не выбран'\r\n        return\r\n    }\r\n    if (levelTransmitter === '1') {\r\n        resultLevel.textContent = ((1 * 100) / level).toFixed(4)\r\n\r\n    }\r\n    if (levelTransmitter === '2') {\r\n        resultLevel.textContent = ((2 * 100) / level).toFixed(4)\r\n    }\r\n    if (levelTransmitter === '3') {\r\n        resultLevel.textContent = ((3 * 100) / level).toFixed(4)\r\n    }\r\n    if (!level) {\r\n        resultLevel.textContent = 'Значение уровня не введено!'\r\n        return\r\n    }\r\n    h = resultLevel.textContent\r\n    total1 = resultLevel.textContent\r\n    densityAccCalc()\r\n}\r\n\r\nlevelCalc()\r\n\r\nfunction tempCalc() {\r\n\r\n    if (tempTransmitter === 'Выберите датчик') {\r\n        resultTemp.textContent = 'Датчик не выбран'\r\n        return\r\n    }\r\n    if (tempTransmitter === '0.5') {\r\n        resultTemp.textContent = ((0.5 * 100) / temp).toFixed(4)\r\n    }\r\n    if (tempTransmitter === '0.25') {\r\n        resultTemp.textContent = ((0.25 * 100) / temp).toFixed(4)\r\n    }\r\n    if (tempTransmitter === '0.15') {\r\n        resultTemp.textContent = ((0.15 * 100) / temp).toFixed(4)\r\n    }\r\n    if (!temp) {\r\n        resultTemp.textContent = 'Значение температуры не введено!'\r\n        return\r\n    }\r\n    total2 = resultTemp.textContent\r\n}\r\n\r\ntempCalc()\r\n\r\nfunction pressureCalc() {\r\n\r\n    if (pressureTransmitter === '0') {\r\n        resultPressure.textContent = 'Датчик давления не выбран'\r\n        return\r\n    }\r\n    if (pressureTransmitter === 'UFF' && tempCorrection === false) {\r\n        resultPressure.textContent = Math.sqrt(((Math.pow((pressure / pressure), 2)) * (Math.pow(0.04, 2))))\r\n    }\r\n    if (pressureTransmitter === 'UFF' && tempCorrection === true) {\r\n        resultPressure.textContent = Math.sqrt(((Math.pow((pressure / pressure), 2)) * (Math.pow(0.17, 2))))\r\n    }\r\n    if (pressureTransmitter === 'U') {\r\n        resultPressure.textContent = ((0.025 * 100) / pressure).toFixed(4)\r\n    }\r\n    if (pressureTransmitter === 'C') {\r\n        resultPressure.textContent = ((0.035 * 100) / pressure).toFixed(4)\r\n    }\r\n    if (!pressure) {\r\n        resultPressure.textContent = 'Давление не введено!'\r\n        return\r\n    }\r\n    p = resultPressure.textContent\r\n    densityAccCalc()\r\n\r\n\r\n}\r\n\r\npressureCalc()\r\n\r\n\r\nfunction densAutoCalc() {\r\n\r\n    if (!level) {\r\n        resultAutoDensityCalc.textContent = 'Уровень не введен!'\r\n        return\r\n    }\r\n    if (!pressure) {\r\n        resultAutoDensityCalc.textContent = 'Давление не введено!'\r\n        return\r\n    } else {\r\n        resultAutoDensityCalc.textContent = (1.21 + (((pressure) / ((level - height)) * 9.81) * 10)).toFixed(4)\r\n    }\r\n    density = resultAutoDensityCalc.textContent\r\n\r\n    absDensityAcc()\r\n    // weightCalc()\r\n}\r\n\r\nfunction weightCalc() {\r\n    if (!density) {\r\n        resultWeight.textContent = 'Плотность неизвестна'\r\n        return\r\n    }\r\n    if (!volume) {\r\n        resultWeight.textContent = 'Объем не введен'\r\n        return;\r\n    } else {\r\n        resultWeight.textContent = ((volume * density) / 1000).toFixed(4)\r\n\r\n    }\r\n    weight = resultWeight.textContent\r\n}\r\n\r\nweightCalc()\r\n\r\nfunction densityAccCalc() {\r\n    if (!pressure) {\r\n        resultDensityAcc.textContent = 'Давление не введено'\r\n        return\r\n    }\r\n    if (levelTransmitter === 'Выберите уровнемер') {\r\n        resultDensityAcc.textContent = 'Уровнемер не выбран'\r\n        return\r\n    }\r\n    if (!level) {\r\n        resultDensityAcc.textContent = 'Уровень не введен'\r\n        return\r\n    } else {\r\n        resultDensityAcc.textContent = ((+h) + (+p)).toFixed(4)\r\n    }\r\n    densityAcc = resultDensityAcc.textContent\r\n    absDensityAcc()\r\n}\r\n\r\n\r\nfunction absDensityAcc() {\r\n    resultAutoAbsDensityAccCalc.textContent = ((density / 100) * densityAcc).toFixed(4)\r\n}\r\n\r\nfunction volumeAccCalc() {\r\n    if (tableAcc === 'Выберите значение') {\r\n        resultVolumeAcc.textContent = 'Погрешность таблицы не выбрана'\r\n        return\r\n    }\r\n    if (tableAcc === '0.05') {\r\n        resultVolumeAcc.textContent = (0.05 * volume).toFixed(4)\r\n    }\r\n    if (tableAcc === '0.1') {\r\n        resultVolumeAcc.textContent = (0.1 * volume).toFixed(4)\r\n    }\r\n    if (tableAcc === '0.2') {\r\n        resultVolumeAcc.textContent = (0.2 * volume).toFixed(4)\r\n    }\r\n    if (!volume) {\r\n        resultVolumeAcc.textContent = 'Объем не введен'\r\n    }\r\n}\r\n\r\nvolumeAccCalc()\r\n\r\nfunction getChecked() {\r\n    let tempCorrectionForm = document.querySelector('.tempCorrection')\r\n    let chbox = document.querySelector('#tempCorrection')\r\n    if (chbox.checked === false) {\r\n        tempCorrection = false\r\n    }\r\n    tempCorrectionForm.addEventListener('change', () => {\r\n        if (chbox.checked) {\r\n            tempCorrection = true\r\n        } else {\r\n            tempCorrection = false\r\n        }\r\n        pressureCalc()\r\n    })\r\n\r\n}\r\n\r\ngetChecked()\r\n\r\n\r\nfunction getRadioChecked() {\r\n    const choose = document.querySelector('.form')\r\n    let densRadio = document.getElementsByName('dens')\r\n    let autoDens = document.querySelector('.wrapper__auto__dens')\r\n    let handleDens = document.querySelector('.wrapper__handle__dens')\r\n\r\n    choose.addEventListener('change', () => {\r\n        densRadio.forEach((elem) => {\r\n            if (elem.checked && elem.value === 'handle') {\r\n                autoDens.style.display = 'none'\r\n                handleDens.style.display = 'inline-flex'\r\n            }\r\n            if (elem.checked && elem.value === 'auto') {\r\n                autoDens.style.display = 'inline-flex'\r\n                handleDens.style.display = 'none'\r\n            }\r\n        })\r\n    })\r\n\r\n}\r\n\r\ngetRadioChecked()\r\n\r\nfunction getDynamicInfo(selector) {\r\n    const input = document.querySelector(selector)\r\n    height = input.value\r\n    input.addEventListener('input', () => {\r\n        switch (input.getAttribute('id')) {\r\n            case 'currentLevel':\r\n                level = +input.value\r\n                levelCalc()\r\n                densityAccCalc()\r\n                densAutoCalc()\r\n                absDensityAcc()\r\n                break\r\n            case 'currentTemp':\r\n                temp = +input.value\r\n                tempCalc()\r\n                break\r\n            case 'currentPressure':\r\n                pressure = input.value\r\n                pressureCalc()\r\n                densAutoCalc()\r\n                densityAccCalc()\r\n                absDensityAcc()\r\n                break\r\n            case 'currentVolume':\r\n                volume = +input.value\r\n                volumeAccCalc()\r\n                weightCalc()\r\n                break\r\n            case 'heightPressureTransmitter':\r\n                height = +input.value\r\n                pressureCalc()\r\n                densAutoCalc()\r\n                densityAccCalc()\r\n                break\r\n        }\r\n    })\r\n}\r\n\r\nfunction getStaticInfo(selector) {\r\n    const transmitter = document.querySelector(selector)\r\n\r\n    transmitter.addEventListener('change', () => {\r\n        switch (transmitter.getAttribute('id')) {\r\n            case 'selectLevel':\r\n                levelTransmitter = transmitter.value\r\n                levelCalc()\r\n                break\r\n            case 'selectTemp':\r\n                tempTransmitter = transmitter.value\r\n                tempCalc()\r\n                break\r\n            case 'selectPressure':\r\n                pressureTransmitter = transmitter.value\r\n                pressureCalc()\r\n                break\r\n            case 'selectTableAcc':\r\n                tableAcc = transmitter.value\r\n                break\r\n\r\n        }\r\n    })\r\n}\r\n\r\ngetDynamicInfo('#currentLevel')\r\ngetDynamicInfo('#currentTemp')\r\ngetDynamicInfo('#currentVolume')\r\ngetDynamicInfo('#currentPressure')\r\ngetDynamicInfo('#heightPressureTransmitter')\r\ngetStaticInfo('#selectLevel')\r\ngetStaticInfo('#selectTemp')\r\ngetStaticInfo('#selectPressure')\r\ngetStaticInfo('#selectTableAcc')\r\n\r\nshowHideAnimation('.level', '.level .container', 'level')\r\nshowHideAnimation('.temperature', '.temperature .container', 'temperature')\r\nshowHideAnimation('.chose__density_type', '.chose__density_type .container', 'chose__density_type')\r\nshowHideAnimation('.wrapper__auto__dens', '.wrapper__auto__dens .container', 'wrapper__auto__dens')\r\nshowHideAnimation('.volume', '.volume .container', 'volume')\r\nshowHideAnimation('.weight', '.weight .container', 'weight')\r\n\r\n\r\n// newElement.innerHTML = `\r\n//         <div class=\"container show\">\r\n//             <div class=\"content\">\r\n//                 <p>Выберите уровнемер</p>\r\n//             </div>\r\n//             <div class=\"content\">\r\n//                 <select class=\"select\" id=\"selectLevel\" onchange=\"getStaticInfo('#selectLevel')\">\r\n//                     <option selected value=\"Выберите уровнемер\">Выберите уровнемер</option>\r\n//                     <option value=\"1\">5900S</option>\r\n//                     <option value=\"2\">5900С</option>\r\n//                     <option value=\"1\">REX</option>\r\n//                     <option value=\"3\">PRO</option>\r\n//                     <option value=\"3\">5300</option>\r\n//                     <option value=\"3\">5400</option>\r\n//                 </select>\r\n//             </div>\r\n//         </div>\r\n// `\r\n//\r\n// element.appendChild(newElement)\r\n// element.addEventListener('click', (e) => {\r\n//     const target = e.target\r\n//     if (target.classList.contains('level') || target.parentElement.classList.contains('title')) {\r\n//         if (newElement.classList.contains('hide'))\r\n//         {\r\n//             newElement.classList.add('show')\r\n//             newElement.style.cssText = 'height: 150px'\r\n//         } else {\r\n//             newElement.classList.remove('show')\r\n//             newElement.classList.add('hide')\r\n//             newElement.style.cssText = 'height: 50px'\r\n//         }\r\n//     }\r\n// })\r\n\r\n"],"names":[],"sourceRoot":""}